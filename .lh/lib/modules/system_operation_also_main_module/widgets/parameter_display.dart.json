{
    "sourceFile": "lib/modules/system_operation_also_main_module/widgets/parameter_display.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1726318175007,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1726411660116,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,170 +1,87 @@\n import 'package:flutter/material.dart';\r\n import 'package:provider/provider.dart';\r\n-import '../providers/operation_experiment_planner_provider.dart';\r\n+import '../providers/experiment_planner_provider.dart';\r\n+import 'parameter_card.dart';\r\n \r\n-class ParameterDisplay extends StatefulWidget {\r\n+class ParameterDisplay extends StatelessWidget {\r\n   @override\r\n-  _ParameterDisplayState createState() => _ParameterDisplayState();\r\n-}\r\n+  Widget build(BuildContext context) {\r\n+    return Consumer<SystemStateProvider>(\r\n+      builder: (context, systemStateProvider, child) {\r\n+        final reactionChamber = systemStateProvider.getComponentByName('Reaction Chamber');\r\n+        final mfc = systemStateProvider.getComponentByName('MFC');\r\n+        final nitrogenGenerator = systemStateProvider.getComponentByName('Nitrogen Generator');\r\n+        final precursorHeater1 = systemStateProvider.getComponentByName('Precursor Heater 1');\r\n+        final precursorHeater2 = systemStateProvider.getComponentByName('Precursor Heater 2');\r\n \r\n-class _ParameterDisplayState extends State<ParameterDisplay> {\r\n-  String _searchQuery = '';\r\n+        return LayoutBuilder(\r\n+          builder: (context, constraints) {\r\n+            final double maxWidth = constraints.maxWidth;\r\n+            final int crossAxisCount = maxWidth > 600 ? 3 : (maxWidth > 400 ? 2 : 1);\r\n \r\n-  @override\r\n-  Widget build(BuildContext context) {\r\n-    return Consumer<SystemStateProvider>(\r\n-      builder: (context, aldSystem, child) {\r\n-        return Card(\r\n-          child: Padding(\r\n-            padding: const EdgeInsets.all(16.0),\r\n-            child: Column(\r\n-              crossAxisAlignment: CrossAxisAlignment.start,\r\n-              children: [\r\n-                Text(\r\n-                  'System Parameters',\r\n-                  style: Theme.of(context).textTheme.titleLarge,\r\n+            return SingleChildScrollView(\r\n+              child: Padding(\r\n+                padding: const EdgeInsets.all(8.0),\r\n+                child: GridView.extent(\r\n+                  maxCrossAxisExtent: 200,\r\n+                  childAspectRatio: 1.5,\r\n+                  mainAxisSpacing: 10,\r\n+                  crossAxisSpacing: 10,\r\n+                  shrinkWrap: true,\r\n+                  physics: NeverScrollableScrollPhysics(),\r\n+                  children: [\r\n+                    _buildParameterCard(\r\n+                      'Chamber Pressure',\r\n+                      '${reactionChamber.currentValues['pressure']?.toStringAsFixed(2) ?? 'N/A'} atm',\r\n+                      '0.9 - 1.1 atm',\r\n+                      systemStateProvider.isReactorPressureNormal(),\r\n+                    ),\r\n+                    _buildParameterCard(\r\n+                      'Chamber Temperature',\r\n+                      '${reactionChamber.currentValues['temperature']?.toStringAsFixed(1) ?? 'N/A'} °C',\r\n+                      '145 - 155 °C',\r\n+                      systemStateProvider.isReactorTemperatureNormal(),\r\n+                    ),\r\n+                    _buildParameterCard(\r\n+                      'MFC Flow Rate',\r\n+                      '${mfc.currentValues['flow_rate']?.toStringAsFixed(2) ?? 'N/A'} sccm',\r\n+                      '0 - 100 sccm',\r\n+                      true,\r\n+                    ),\r\n+                    _buildParameterCard(\r\n+                      'Nitrogen Flow Rate',\r\n+                      '${nitrogenGenerator.currentValues['flow_rate']?.toStringAsFixed(2) ?? 'N/A'} sccm',\r\n+                      '0 - 100 sccm',\r\n+                      true,\r\n+                    ),\r\n+                    _buildParameterCard(\r\n+                      'Precursor Heater 1',\r\n+                      '${precursorHeater1.currentValues['temperature']?.toStringAsFixed(1) ?? 'N/A'} °C',\r\n+                      '28 - 32 °C',\r\n+                      systemStateProvider.isPrecursorTemperatureNormal('Precursor Heater 1'),\r\n+                    ),\r\n+                    _buildParameterCard(\r\n+                      'Precursor Heater 2',\r\n+                      '${precursorHeater2.currentValues['temperature']?.toStringAsFixed(1) ?? 'N/A'} °C',\r\n+                      '28 - 32 °C',\r\n+                      systemStateProvider.isPrecursorTemperatureNormal('Precursor Heater 2'),\r\n+                    ),\r\n+                  ],\r\n                 ),\r\n-                SizedBox(height: 16),\r\n-                TextField(\r\n-                  decoration: InputDecoration(\r\n-                    labelText: 'Search Parameters',\r\n-                    prefixIcon: Icon(Icons.search),\r\n-                    border: OutlineInputBorder(),\r\n-                  ),\r\n-                  onChanged: (value) {\r\n-                    setState(() {\r\n-                      _searchQuery = value.toLowerCase();\r\n-                    });\r\n-                  },\r\n-                ),\r\n-                SizedBox(height: 16),\r\n-                Expanded(\r\n-                  child: ListView(\r\n-                    children: [\r\n-                      _buildExpandableSection('N2 Generator', [\r\n-                        _buildParameterRow('Status', aldSystem.n2GenActive ? 'Active' : 'Inactive'),\r\n-                        _buildParameterRow('Flow Rate', '${aldSystem.n2Flow.toStringAsFixed(2)} sccm'),\r\n-                      ]),\r\n-                      _buildExpandableSection('Mass Flow Controller', [\r\n-                        _buildParameterRow('Setpoint', '${aldSystem.mfcSetpoint.toStringAsFixed(2)} sccm'),\r\n-                        _buildParameterRow('Actual Flow', '${aldSystem.mfcActualFlow.toStringAsFixed(2)} sccm'),\r\n-                      ]),\r\n-                      _buildExpandableSection('Frontline Heater', [\r\n-                        _buildParameterRow('Status', aldSystem.frontlineHeaterActive ? 'Active' : 'Inactive'),\r\n-                        _buildParameterRow('Temperature', '${aldSystem.frontlineTemperature.toStringAsFixed(1)}°C'),\r\n-                        _buildParameterRow('Setpoint', '${aldSystem.frontlineSetpoint.toStringAsFixed(1)}°C'),\r\n-                      ]),\r\n-                      _buildExpandableSection('Chamber', [\r\n-                        _buildParameterRow('Pressure', '${aldSystem.chamberPressure.toStringAsFixed(3)} Torr'),\r\n-                        _buildParameterRow('Temperature', '${aldSystem.chamberTemperature.toStringAsFixed(1)}°C'),\r\n-                      ]),\r\n-                      _buildExpandableSection('Backline Heater', [\r\n-                        _buildParameterRow('Status', aldSystem.backlineHeaterActive ? 'Active' : 'Inactive'),\r\n-                        _buildParameterRow('Temperature', '${aldSystem.backlineTemperature.toStringAsFixed(1)}°C'),\r\n-                        _buildParameterRow('Setpoint', '${aldSystem.backlineSetpoint.toStringAsFixed(1)}°C'),\r\n-                      ]),\r\n-                      _buildExpandableSection('Pressure Controller', [\r\n-                        _buildParameterRow('Setpoint', '${aldSystem.pcSetpoint.toStringAsFixed(3)} Torr'),\r\n-                        _buildParameterRow('Actual Pressure', '${aldSystem.pcActualPressure.toStringAsFixed(3)} Torr'),\r\n-                      ]),\r\n-                      _buildExpandableSection('Pump', [\r\n-                        _buildParameterRow('Status', aldSystem.pumpActive ? 'Active' : 'Inactive'),\r\n-                      ]),\r\n-                      _buildExpandableSection('Valves', [\r\n-                        _buildParameterRow('V1', aldSystem.v1Open ? 'Open' : 'Closed'),\r\n-                        _buildParameterRow('V2', aldSystem.v2Open ? 'Open' : 'Closed'),\r\n-                      ]),\r\n-                      _buildExpandableSection('Heaters', [\r\n-                        _buildParameterRow('H1 Status', aldSystem.h1Active ? 'Active' : 'Inactive'),\r\n-                        _buildParameterRow('H1 Temperature', '${aldSystem.h1Temperature.toStringAsFixed(1)}°C'),\r\n-                        _buildParameterRow('H1 Setpoint', '${aldSystem.h1Setpoint.toStringAsFixed(1)}°C'),\r\n-                        _buildParameterRow('H2 Status', aldSystem.h2Active ? 'Active' : 'Inactive'),\r\n-                        _buildParameterRow('H2 Temperature', '${aldSystem.h2Temperature.toStringAsFixed(1)}°C'),\r\n-                        _buildParameterRow('H2 Setpoint', '${aldSystem.h2Setpoint.toStringAsFixed(1)}°C'),\r\n-                      ]),\r\n-                    ],\r\n-                  ),\r\n-                ),\r\n-              ],\r\n-            ),\r\n-          ),\r\n+              ),\r\n+            );\r\n+          },\r\n         );\r\n       },\r\n     );\r\n   }\r\n \r\n-  Widget _buildExpandableSection(String title, List<Widget> rows) {\r\n-    bool isExpanded = _searchQuery.isEmpty || title.toLowerCase().contains(_searchQuery) ||\r\n-        rows.any((row) => (row as _ParameterRow).label.toLowerCase().contains(_searchQuery) ||\r\n-            (row as _ParameterRow).value.toLowerCase().contains(_searchQuery));\r\n-\r\n-    return ExpansionTile(\r\n-      title: Text(title, style: TextStyle(fontWeight: FontWeight.bold)),\r\n-      initiallyExpanded: isExpanded,\r\n-      children: rows,\r\n-    );\r\n-  }\r\n-\r\n-  Widget _buildParameterRow(String label, String value) {\r\n-    return _ParameterRow(\r\n-      label: label,\r\n+  Widget _buildParameterCard(String title, String value, String normalRange, bool isNormal) {\r\n+    return ParameterCard(\r\n+      title: title,\r\n       value: value,\r\n-      isVisible: _searchQuery.isEmpty ||\r\n-          label.toLowerCase().contains(_searchQuery) ||\r\n-          value.toLowerCase().contains(_searchQuery),\r\n+      normalRange: normalRange,\r\n+      isNormal: isNormal,\r\n     );\r\n   }\r\n-}\r\n-\r\n-class _ParameterRow extends StatelessWidget {\r\n-  final String label;\r\n-  final String value;\r\n-  final bool isVisible;\r\n-\r\n-  const _ParameterRow({\r\n-    Key? key,\r\n-    required this.label,\r\n-    required this.value,\r\n-    required this.isVisible,\r\n-  }) : super(key: key);\r\n-\r\n-  @override\r\n-  Widget build(BuildContext context) {\r\n-    if (!isVisible) return SizedBox.shrink();\r\n-\r\n-    return Padding(\r\n-      padding: const EdgeInsets.symmetric(vertical: 4.0, horizontal: 16.0),\r\n-      child: Row(\r\n-        mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n-        children: [\r\n-          Flexible(\r\n-            child: Text(\r\n-              label,\r\n-              style: TextStyle(fontWeight: FontWeight.bold),\r\n-              overflow: TextOverflow.ellipsis,\r\n-            ),\r\n-          ),\r\n-          SizedBox(width: 8),\r\n-          Flexible(\r\n-            child: Text(\r\n-              value,\r\n-              style: TextStyle(color: _getValueColor(value)),\r\n-              textAlign: TextAlign.right,\r\n-              overflow: TextOverflow.ellipsis,\r\n-            ),\r\n-          ),\r\n-        ],\r\n-      ),\r\n-    );\r\n-  }\r\n-\r\n-  Color _getValueColor(String value) {\r\n-    if (value == 'Active' || value == 'Open') {\r\n-      return Colors.green;\r\n-    } else if (value == 'Inactive' || value == 'Closed') {\r\n-      return Colors.red;\r\n-    }\r\n-    // Add more color logic for numerical values if needed\r\n-    return Colors.black;\r\n-  }\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1726412330837,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import 'package:flutter/material.dart';\r\n import 'package:provider/provider.dart';\r\n-import '../providers/experiment_planner_provider.dart';\r\n+import '../providers/system_provider.dart';\r\n import 'parameter_card.dart';\r\n \r\n class ParameterDisplay extends StatelessWidget {\r\n   @override\r\n"
                },
                {
                    "date": 1730752376660,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import 'package:flutter/material.dart';\r\n import 'package:provider/provider.dart';\r\n-import '../providers/system_provider.dart';\r\n+import '../providers/system_state_provider.dart';\r\n import 'parameter_card.dart';\r\n \r\n class ParameterDisplay extends StatelessWidget {\r\n   @override\r\n@@ -29,44 +29,50 @@\n                   crossAxisSpacing: 10,\r\n                   shrinkWrap: true,\r\n                   physics: NeverScrollableScrollPhysics(),\r\n                   children: [\r\n-                    _buildParameterCard(\r\n-                      'Chamber Pressure',\r\n-                      '${reactionChamber.currentValues['pressure']?.toStringAsFixed(2) ?? 'N/A'} atm',\r\n-                      '0.9 - 1.1 atm',\r\n-                      systemStateProvider.isReactorPressureNormal(),\r\n-                    ),\r\n-                    _buildParameterCard(\r\n-                      'Chamber Temperature',\r\n-                      '${reactionChamber.currentValues['temperature']?.toStringAsFixed(1) ?? 'N/A'} °C',\r\n-                      '145 - 155 °C',\r\n-                      systemStateProvider.isReactorTemperatureNormal(),\r\n-                    ),\r\n-                    _buildParameterCard(\r\n-                      'MFC Flow Rate',\r\n-                      '${mfc.currentValues['flow_rate']?.toStringAsFixed(2) ?? 'N/A'} sccm',\r\n-                      '0 - 100 sccm',\r\n-                      true,\r\n-                    ),\r\n-                    _buildParameterCard(\r\n-                      'Nitrogen Flow Rate',\r\n-                      '${nitrogenGenerator.currentValues['flow_rate']?.toStringAsFixed(2) ?? 'N/A'} sccm',\r\n-                      '0 - 100 sccm',\r\n-                      true,\r\n-                    ),\r\n-                    _buildParameterCard(\r\n-                      'Precursor Heater 1',\r\n-                      '${precursorHeater1.currentValues['temperature']?.toStringAsFixed(1) ?? 'N/A'} °C',\r\n-                      '28 - 32 °C',\r\n-                      systemStateProvider.isPrecursorTemperatureNormal('Precursor Heater 1'),\r\n-                    ),\r\n-                    _buildParameterCard(\r\n-                      'Precursor Heater 2',\r\n-                      '${precursorHeater2.currentValues['temperature']?.toStringAsFixed(1) ?? 'N/A'} °C',\r\n-                      '28 - 32 °C',\r\n-                      systemStateProvider.isPrecursorTemperatureNormal('Precursor Heater 2'),\r\n-                    ),\r\n+                    if (reactionChamber != null)\r\n+                      ParameterCard(\r\n+                        title: 'Chamber Pressure',\r\n+                        value: '${reactionChamber.currentValues['pressure']?.toStringAsFixed(2) ?? 'N/A'} atm',\r\n+                        normalRange: '0.9 - 1.1 atm',\r\n+                        isNormal: systemStateProvider.isReactorPressureNormal(),\r\n+                      ),\r\n+                    if (reactionChamber != null)\r\n+                      ParameterCard(\r\n+                        title: 'Chamber Temperature',\r\n+                        value: '${reactionChamber.currentValues['temperature']?.toStringAsFixed(1) ?? 'N/A'} °C',\r\n+                        normalRange: '145 - 155 °C',\r\n+                        isNormal: systemStateProvider.isReactorTemperatureNormal(),\r\n+                      ),\r\n+                    if (mfc != null)\r\n+                      ParameterCard(\r\n+                        title: 'MFC Flow Rate',\r\n+                        value: '${mfc.currentValues['flow_rate']?.toStringAsFixed(2) ?? 'N/A'} sccm',\r\n+                        normalRange: '0 - 100 sccm',\r\n+                        isNormal: true,\r\n+                      ),\r\n+                    if (nitrogenGenerator != null)\r\n+                      ParameterCard(\r\n+                        title: 'Nitrogen Flow Rate',\r\n+                        value: '${nitrogenGenerator.currentValues['flow_rate']?.toStringAsFixed(2) ?? 'N/A'} sccm',\r\n+                        normalRange: '0 - 100 sccm',\r\n+                        isNormal: true,\r\n+                      ),\r\n+                    if (precursorHeater1 != null)\r\n+                      ParameterCard(\r\n+                        title: 'Precursor Heater 1',\r\n+                        value: '${precursorHeater1.currentValues['temperature']?.toStringAsFixed(1) ?? 'N/A'} °C',\r\n+                        normalRange: '28 - 32 °C',\r\n+                        isNormal: systemStateProvider.isPrecursorTemperatureNormal('Precursor Heater 1'),\r\n+                      ),\r\n+                    if (precursorHeater2 != null)\r\n+                      ParameterCard(\r\n+                        title: 'Precursor Heater 2',\r\n+                        value: '${precursorHeater2.currentValues['temperature']?.toStringAsFixed(1) ?? 'N/A'} °C',\r\n+                        normalRange: '28 - 32 °C',\r\n+                        isNormal: systemStateProvider.isPrecursorTemperatureNormal('Precursor Heater 2'),\r\n+                      ),\r\n                   ],\r\n                 ),\r\n               ),\r\n             );\r\n"
                }
            ],
            "date": 1726318175007,
            "name": "Commit-0",
            "content": "import 'package:flutter/material.dart';\r\nimport 'package:provider/provider.dart';\r\nimport '../providers/operation_experiment_planner_provider.dart';\r\n\r\nclass ParameterDisplay extends StatefulWidget {\r\n  @override\r\n  _ParameterDisplayState createState() => _ParameterDisplayState();\r\n}\r\n\r\nclass _ParameterDisplayState extends State<ParameterDisplay> {\r\n  String _searchQuery = '';\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return Consumer<SystemStateProvider>(\r\n      builder: (context, aldSystem, child) {\r\n        return Card(\r\n          child: Padding(\r\n            padding: const EdgeInsets.all(16.0),\r\n            child: Column(\r\n              crossAxisAlignment: CrossAxisAlignment.start,\r\n              children: [\r\n                Text(\r\n                  'System Parameters',\r\n                  style: Theme.of(context).textTheme.titleLarge,\r\n                ),\r\n                SizedBox(height: 16),\r\n                TextField(\r\n                  decoration: InputDecoration(\r\n                    labelText: 'Search Parameters',\r\n                    prefixIcon: Icon(Icons.search),\r\n                    border: OutlineInputBorder(),\r\n                  ),\r\n                  onChanged: (value) {\r\n                    setState(() {\r\n                      _searchQuery = value.toLowerCase();\r\n                    });\r\n                  },\r\n                ),\r\n                SizedBox(height: 16),\r\n                Expanded(\r\n                  child: ListView(\r\n                    children: [\r\n                      _buildExpandableSection('N2 Generator', [\r\n                        _buildParameterRow('Status', aldSystem.n2GenActive ? 'Active' : 'Inactive'),\r\n                        _buildParameterRow('Flow Rate', '${aldSystem.n2Flow.toStringAsFixed(2)} sccm'),\r\n                      ]),\r\n                      _buildExpandableSection('Mass Flow Controller', [\r\n                        _buildParameterRow('Setpoint', '${aldSystem.mfcSetpoint.toStringAsFixed(2)} sccm'),\r\n                        _buildParameterRow('Actual Flow', '${aldSystem.mfcActualFlow.toStringAsFixed(2)} sccm'),\r\n                      ]),\r\n                      _buildExpandableSection('Frontline Heater', [\r\n                        _buildParameterRow('Status', aldSystem.frontlineHeaterActive ? 'Active' : 'Inactive'),\r\n                        _buildParameterRow('Temperature', '${aldSystem.frontlineTemperature.toStringAsFixed(1)}°C'),\r\n                        _buildParameterRow('Setpoint', '${aldSystem.frontlineSetpoint.toStringAsFixed(1)}°C'),\r\n                      ]),\r\n                      _buildExpandableSection('Chamber', [\r\n                        _buildParameterRow('Pressure', '${aldSystem.chamberPressure.toStringAsFixed(3)} Torr'),\r\n                        _buildParameterRow('Temperature', '${aldSystem.chamberTemperature.toStringAsFixed(1)}°C'),\r\n                      ]),\r\n                      _buildExpandableSection('Backline Heater', [\r\n                        _buildParameterRow('Status', aldSystem.backlineHeaterActive ? 'Active' : 'Inactive'),\r\n                        _buildParameterRow('Temperature', '${aldSystem.backlineTemperature.toStringAsFixed(1)}°C'),\r\n                        _buildParameterRow('Setpoint', '${aldSystem.backlineSetpoint.toStringAsFixed(1)}°C'),\r\n                      ]),\r\n                      _buildExpandableSection('Pressure Controller', [\r\n                        _buildParameterRow('Setpoint', '${aldSystem.pcSetpoint.toStringAsFixed(3)} Torr'),\r\n                        _buildParameterRow('Actual Pressure', '${aldSystem.pcActualPressure.toStringAsFixed(3)} Torr'),\r\n                      ]),\r\n                      _buildExpandableSection('Pump', [\r\n                        _buildParameterRow('Status', aldSystem.pumpActive ? 'Active' : 'Inactive'),\r\n                      ]),\r\n                      _buildExpandableSection('Valves', [\r\n                        _buildParameterRow('V1', aldSystem.v1Open ? 'Open' : 'Closed'),\r\n                        _buildParameterRow('V2', aldSystem.v2Open ? 'Open' : 'Closed'),\r\n                      ]),\r\n                      _buildExpandableSection('Heaters', [\r\n                        _buildParameterRow('H1 Status', aldSystem.h1Active ? 'Active' : 'Inactive'),\r\n                        _buildParameterRow('H1 Temperature', '${aldSystem.h1Temperature.toStringAsFixed(1)}°C'),\r\n                        _buildParameterRow('H1 Setpoint', '${aldSystem.h1Setpoint.toStringAsFixed(1)}°C'),\r\n                        _buildParameterRow('H2 Status', aldSystem.h2Active ? 'Active' : 'Inactive'),\r\n                        _buildParameterRow('H2 Temperature', '${aldSystem.h2Temperature.toStringAsFixed(1)}°C'),\r\n                        _buildParameterRow('H2 Setpoint', '${aldSystem.h2Setpoint.toStringAsFixed(1)}°C'),\r\n                      ]),\r\n                    ],\r\n                  ),\r\n                ),\r\n              ],\r\n            ),\r\n          ),\r\n        );\r\n      },\r\n    );\r\n  }\r\n\r\n  Widget _buildExpandableSection(String title, List<Widget> rows) {\r\n    bool isExpanded = _searchQuery.isEmpty || title.toLowerCase().contains(_searchQuery) ||\r\n        rows.any((row) => (row as _ParameterRow).label.toLowerCase().contains(_searchQuery) ||\r\n            (row as _ParameterRow).value.toLowerCase().contains(_searchQuery));\r\n\r\n    return ExpansionTile(\r\n      title: Text(title, style: TextStyle(fontWeight: FontWeight.bold)),\r\n      initiallyExpanded: isExpanded,\r\n      children: rows,\r\n    );\r\n  }\r\n\r\n  Widget _buildParameterRow(String label, String value) {\r\n    return _ParameterRow(\r\n      label: label,\r\n      value: value,\r\n      isVisible: _searchQuery.isEmpty ||\r\n          label.toLowerCase().contains(_searchQuery) ||\r\n          value.toLowerCase().contains(_searchQuery),\r\n    );\r\n  }\r\n}\r\n\r\nclass _ParameterRow extends StatelessWidget {\r\n  final String label;\r\n  final String value;\r\n  final bool isVisible;\r\n\r\n  const _ParameterRow({\r\n    Key? key,\r\n    required this.label,\r\n    required this.value,\r\n    required this.isVisible,\r\n  }) : super(key: key);\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    if (!isVisible) return SizedBox.shrink();\r\n\r\n    return Padding(\r\n      padding: const EdgeInsets.symmetric(vertical: 4.0, horizontal: 16.0),\r\n      child: Row(\r\n        mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n        children: [\r\n          Flexible(\r\n            child: Text(\r\n              label,\r\n              style: TextStyle(fontWeight: FontWeight.bold),\r\n              overflow: TextOverflow.ellipsis,\r\n            ),\r\n          ),\r\n          SizedBox(width: 8),\r\n          Flexible(\r\n            child: Text(\r\n              value,\r\n              style: TextStyle(color: _getValueColor(value)),\r\n              textAlign: TextAlign.right,\r\n              overflow: TextOverflow.ellipsis,\r\n            ),\r\n          ),\r\n        ],\r\n      ),\r\n    );\r\n  }\r\n\r\n  Color _getValueColor(String value) {\r\n    if (value == 'Active' || value == 'Open') {\r\n      return Colors.green;\r\n    } else if (value == 'Inactive' || value == 'Closed') {\r\n      return Colors.red;\r\n    }\r\n    // Add more color logic for numerical values if needed\r\n    return Colors.black;\r\n  }\r\n}"
        }
    ]
}